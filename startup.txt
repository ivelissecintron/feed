1. cd into the directory of the project
2. in you terminal run: npm i
3. if there is an error run npm i bcrypt@2.0.1 
    and then again run npm i
4. run export pj_two_jwtPrivateKey=aSecureKey
5. run npm start (your server is now started)
6. open postman

7. for route localhost:8080/api/users  :
    **POST:
        1. Select POST from the button in the top left (to use post route)
        2. Then click "Body" in the top navbar
        3. click "raw" and change the "Text" to "JSON"
        4. add this code in the body 
            {
                "name": "Your Name Here",
                "email": "email@email.com",
                "password": "America1776!"
            }
        5. Click Send to send the request
        6. The response should be in the body section

    GET:
        1. Select GET from the button in the top left (to use get route)
        2. Click Send to send the request
        3. The response should be in the body section

    GET By id:
        1. Select GET from the button in the top left (to use get route)
        2. Add in the user id to the route localhost:8080/api/users/User_Id_Here
            example: localhost:8080/api/users/1
        3. Click Send to send the request
        4. The response should be in the body section

    DELETE By Id: 
        1. Select DELETE from the button in the top left (to use delete route)
        2. Change the query string from localhost:8080/api/users to localhost:8080/api/users/The_User_ID
            (most likely): localhost:8080/api/users/1
        3. the response should be: 
        [
            1
        ]
    PUT By Id: 
        1. Select PUT from the button in the top left (to use put route)
        2. Enter new user information (make sure to include the id ), example:
        {
            "id": 1, <-- not a string, an integer, do not wrap this in quotes -->
            "name": "Another Name",
            "email": "anotherEmail@email.com",
            "password": "Banan1234?"
        }

8. for route localhost:8080/api/meals  :
    POST:
        1. Select POST from the button in the top left (to use post route)
        2. Then click "Body" in the top navbar
        3. click "raw" and change the "Text" to "JSON"
        4. add this code in the body 
            {
                "UserId": 1 <-- The User's Id, not a string, an integer, do not wrap this in quotes --> 
                "meal": "A meal here",
            }
        5. Make sure that there is a user created before doing this
        5. Click Send to send the request
        6. The response should be in the body section
        7. You can now also go to the localhost:8080/api/meals route and send a get request
            You should now see the user's info with the meal

    GET:
        1. Select GET from the button in the top left (to use get route)
        2. Click Send to send the request
        3. The response should be in the body section

    GET By id:
        1. Select GET from the button in the top left (to use get route)
        2. Add in the user id to the route localhost:8080/api/meals/Meal_Id_Here
            example: localhost:8080/api/meals/1
        3. Click Send to send the request
        4. The response should be in the body section

    DELETE By Id: 
        1. Select DELETE from the button in the top left (to use get route)
        2. Change the query string from localhost:8080/api/meals to localhost:8080/api/meal/The_Meal_ID
            (most likely): localhost:8080/api/meals/1
        3. Click Send to send the request
        4. the response should be: 1
    
    9. for route localhost:8080/api/auth : 
        POST: 
            1. Execute the first post route for localhost:8080/api/users (starred)
            2. Navigate the the Headers tab **-On the Bottom.
            3. At the bottom you will see x-auth-token
            4. Copy the long string value **(JSONWebToken)
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MzEyODExMTl9.uGFHa7rHnJvzUqRKLnDvAn_-RW6mUk-TYuL3rcySKBE
            5. Select POST from the button in the top left (to use post route)
            6. Make sure the route is set to localhost:8080/api/auth
            7. Go to the headers tab **-At the Top.
            8. Add a key of x-auth token
               And a value of the long string value (The **JSONWebToken)
            9. Then click "Body" in the top navbar
            10. click "raw" and change the "Text" to "JSON"
            11. Then add in the password and email 
                example: 
                {
                    "email": "email@email.com",
                    "password": "America1776!"
                }
            12. Click Send to send the request
            13. The response should be another JSONWebToken 
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MzEyODE2MzB9.aHpQ1C-XjVvQgOtsy66E8PGt2WXQxOp9Un7Jd3g5Fiw
            14. YOU'RE DONE!!! 


        


